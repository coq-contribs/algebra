##############################################################################
##                 The Calculus of Inductive Constructions                  ##
##                                                                          ##
##                                Projet Coq                                ##
##                                                                          ##
##                     INRIA                        ENS-CNRS                ##
##              Rocquencourt                        Lyon                    ##
##                                                                          ##
##                                  Coq V7                                  ##
##                                                                          ##
##                                                                          ##
##############################################################################

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

##########################
#                        #
# Variables definitions. #
#                        #
##########################

CAMLP4LIB=`camlp4 -where`
COQSRC=-I $(COQTOP)/kernel -I $(COQTOP)/lib \
  -I $(COQTOP)/library -I $(COQTOP)/parsing \
  -I $(COQTOP)/pretyping -I $(COQTOP)/interp \
  -I $(COQTOP)/proofs -I $(COQTOP)/syntax -I $(COQTOP)/tactics \
  -I $(COQTOP)/toplevel -I $(COQTOP)/contrib/correctness \
  -I $(COQTOP)/contrib/extraction -I $(COQTOP)/contrib/field \
  -I $(COQTOP)/contrib/fourier -I $(COQTOP)/contrib/graphs \
  -I $(COQTOP)/contrib/interface -I $(COQTOP)/contrib/jprover \
  -I $(COQTOP)/contrib/omega -I $(COQTOP)/contrib/romega \
  -I $(COQTOP)/contrib/ring -I $(COQTOP)/contrib/xml \
  -I $(CAMLP4LIB)
ZFLAGS=$(OCAMLLIBS) $(COQSRC)
OPT=
COQFLAGS=-q $(OPT) $(COQLIBS) $(COQ_XML)
COQC=$(COQBIN)coqc
GALLINA=gallina
COQDOC=coqdoc
CAMLC=ocamlc -c
CAMLOPTC=ocamlopt -c
CAMLLINK=ocamlc
CAMLOPTLINK=ocamlopt
COQDEP=$(COQBIN)coqdep -c
COQVO2XML=coq_vo2xml
GRAMMARS=grammar.cma
CAMLP4EXTEND=pa_extend.cmo pa_ifdef.cmo q_MLast.cmo
PP=-pp "camlp4o -I . -I $(COQTOP)/parsing $(CAMLP4EXTEND) $(GRAMMARS) -impl"

#########################
#                       #
# Libraries definition. #
#                       #
#########################

OCAMLLIBS=-I .
COQLIBS=-I .

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES=Abelian_group_cat.v\
  Abelian_group_facts.v\
  Algebra_facts.v\
  Algebra.v\
  Cantor_Bernstein.v\
  Cartesian.v\
  Categories2.v\
  Categories.v\
  Cfield_cat.v\
  Cfield_facts.v\
  Complex_field.v\
  Diff.v\
  Endo_set.v\
  Field_cat.v\
  Field_facts.v\
  Fmap.v\
  Fpart2.v\
  Fpart.v\
  Fraction_field.v\
  Free_abelian_group.v\
  Free_abelian_monoid.v\
  Free_group.v\
  Free_module.v\
  Free_monoid.v\
  Generated_group.v\
  Generated_module.v\
  Generated_monoid.v\
  Group_cat.v\
  Group_facts.v\
  Group_hom_factor.v\
  Group_kernel.v\
  Group_of_group_hom.v\
  Group_power.v\
  Group_quotient.v\
  Group_util.v\
  Hom_module.v\
  Ideal.v\
  Integral_domain_cat.v\
  Integral_domain_facts.v\
  Inter.v\
  Module_cat.v\
  Module_facts.v\
  Module_kernel.v\
  Module_util.v\
  Monoid_cat.v\
  Monoid_facts.v\
  Monoid_kernel.v\
  Monoid_util.v\
  Operation_of_monoid.v\
  Parts2.v\
  Parts3.v\
  Parts.v\
  Qfield.v\
  Ring_cat.v\
  Ring_facts.v\
  Ring_util.v\
  Set_cat.v\
  Sets.v\
  Sgroup_cat.v\
  Sgroup_facts.v\
  Singleton.v\
  Subcat.v\
  Sub_group.v\
  Sub_module.v\
  Sub_monoid.v\
  Sub_sgroup.v\
  Tiroirs.v\
  Union.v\
  Z_group_facts.v\
  Z_group.v\
  Zring.v\
  ZUP.v
VOFILES=$(VFILES:.v=.vo)
VIFILES=$(VFILES:.v=.vi)
GFILES=$(VFILES:.v=.g)
HTMLFILES=$(VFILES:.v=.html)
GHTMLFILES=$(VFILES:.v=.g.html)

all: Abelian_group_cat.vo\
  Abelian_group_facts.vo\
  Algebra_facts.vo\
  Algebra.vo\
  Cantor_Bernstein.vo\
  Cartesian.vo\
  Categories2.vo\
  Categories.vo\
  Cfield_cat.vo\
  Cfield_facts.vo\
  Complex_field.vo\
  Diff.vo\
  Endo_set.vo\
  Field_cat.vo\
  Field_facts.vo\
  Fmap.vo\
  Fpart2.vo\
  Fpart.vo\
  Fraction_field.vo\
  Free_abelian_group.vo\
  Free_abelian_monoid.vo\
  Free_group.vo\
  Free_module.vo\
  Free_monoid.vo\
  Generated_group.vo\
  Generated_module.vo\
  Generated_monoid.vo\
  Group_cat.vo\
  Group_facts.vo\
  Group_hom_factor.vo\
  Group_kernel.vo\
  Group_of_group_hom.vo\
  Group_power.vo\
  Group_quotient.vo\
  Group_util.vo\
  Hom_module.vo\
  Ideal.vo\
  Integral_domain_cat.vo\
  Integral_domain_facts.vo\
  Inter.vo\
  Module_cat.vo\
  Module_facts.vo\
  Module_kernel.vo\
  Module_util.vo\
  Monoid_cat.vo\
  Monoid_facts.vo\
  Monoid_kernel.vo\
  Monoid_util.vo\
  Operation_of_monoid.vo\
  Parts2.vo\
  Parts3.vo\
  Parts.vo\
  Qfield.vo\
  Ring_cat.vo\
  Ring_facts.vo\
  Ring_util.vo\
  Set_cat.vo\
  Sets.vo\
  Sgroup_cat.vo\
  Sgroup_facts.vo\
  Singleton.vo\
  Subcat.vo\
  Sub_group.vo\
  Sub_module.vo\
  Sub_monoid.vo\
  Sub_sgroup.vo\
  Tiroirs.vo\
  Union.vo\
  Z_group_facts.vo\
  Z_group.vo\
  Zring.vo\
  ZUP.vo

spec: $(VIFILES)

gallina: $(GFILES)

html: $(HTMLFILES)

gallinahtml: $(GHTMLFILES)

all.ps: $(VFILES)
	$(COQDOC) -ps -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -ps -g -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

xml:: .xml_time_stamp
.xml_time_stamp: Abelian_group_cat.vo\
  Abelian_group_facts.vo\
  Algebra_facts.vo\
  Algebra.vo\
  Cantor_Bernstein.vo\
  Cartesian.vo\
  Categories2.vo\
  Categories.vo\
  Cfield_cat.vo\
  Cfield_facts.vo\
  Complex_field.vo\
  Diff.vo\
  Endo_set.vo\
  Field_cat.vo\
  Field_facts.vo\
  Fmap.vo\
  Fpart2.vo\
  Fpart.vo\
  Fraction_field.vo\
  Free_abelian_group.vo\
  Free_abelian_monoid.vo\
  Free_group.vo\
  Free_module.vo\
  Free_monoid.vo\
  Generated_group.vo\
  Generated_module.vo\
  Generated_monoid.vo\
  Group_cat.vo\
  Group_facts.vo\
  Group_hom_factor.vo\
  Group_kernel.vo\
  Group_of_group_hom.vo\
  Group_power.vo\
  Group_quotient.vo\
  Group_util.vo\
  Hom_module.vo\
  Ideal.vo\
  Integral_domain_cat.vo\
  Integral_domain_facts.vo\
  Inter.vo\
  Module_cat.vo\
  Module_facts.vo\
  Module_kernel.vo\
  Module_util.vo\
  Monoid_cat.vo\
  Monoid_facts.vo\
  Monoid_kernel.vo\
  Monoid_util.vo\
  Operation_of_monoid.vo\
  Parts2.vo\
  Parts3.vo\
  Parts.vo\
  Qfield.vo\
  Ring_cat.vo\
  Ring_facts.vo\
  Ring_util.vo\
  Set_cat.vo\
  Sets.vo\
  Sgroup_cat.vo\
  Sgroup_facts.vo\
  Singleton.vo\
  Subcat.vo\
  Sub_group.vo\
  Sub_module.vo\
  Sub_monoid.vo\
  Sub_sgroup.vo\
  Tiroirs.vo\
  Union.vo\
  Z_group_facts.vo\
  Z_group.vo\
  Zring.vo\
  ZUP.vo
	$(COQVO2XML) $(COQFLAGS) $(?:%.o=%)
	touch .xml_time_stamp

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend xml

.SUFFIXES: .v .vo .vi .g .html .tex .g.tex .g.html

.v.vo:
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

.v.vi:
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

.v.g:
	$(GALLINA) $<

.v.tex:
	$(COQDOC) -latex $< -o $@

.v.html:
	$(COQDOC) -html $< -o $@

.v.g.tex:
	$(COQDOC) -latex -g $< -o $@

.v.g.html:
	$(COQDOC) -html -g $< -o $@

byte:
	$(MAKE) all "OPT="

opt:
	$(MAKE) all "OPT=-opt"

include .depend

depend:
	rm .depend
	$(COQDEP) -i $(COQLIBS) *.v *.ml *.mli >.depend
	$(COQDEP) $(COQLIBS) -suffix .html *.v >>.depend

xml::

install:
	mkdir -p `$(COQC) -where`/user-contrib
	cp -f *.vo `$(COQC) -where`/user-contrib

Makefile: Make
	mv -f Makefile Makefile.bak
	$(COQBIN)coq_makefile -f Make -o Makefile

clean:
	rm -f *.cmo *.cmi *.cmx *.o *.vo *.vi *.g *~
	rm -f all.ps all-gal.ps $(HTMLFILES) $(GHTMLFILES)

archclean:
	rm -f *.cmx *.o

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

